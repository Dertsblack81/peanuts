@using Com.QueoFlow.Peanuts.Net.Core.Resources
@using Com.QueoFlow.Peanuts.Net.Web.Helper
@using Com.QueoFlow.Peanuts.Net.Web.Resources
@model Com.QueoFlow.Peanuts.Net.Web.Models.UserGroup.UserGroupMembershipDetailsViewModel

@{
    ViewBag.Title = Model.UserGroupMembership.UserGroup.Name;
    Layout = "~/Views/Shared/_LayoutSidebar.cshtml";
}

@section toolbar {
    <a class="btn btn-default" href="@Url.Action("AllMemberships", "UserGroup")">
        <span class="icon-arrow-left"></span>
        Zurück
    </a>
}

@section tabs {
    <ul class="nav nav-tabs" role="tablist">
        <li class="active" role="presentation">
            <a href="@Url.Action("MembershipDetails", new { userGroup = Model.UserGroupMembership.UserGroup.BusinessId, userGroupMembership = Model.UserGroupMembership.BusinessId })" aria-controls="membership" role="tab">
                Mitgliedschaft
            </a>
        </li>
        <li role="presentation">
            <a href="@Url.Action("Members", new { userGroup = Model.UserGroupMembership.UserGroup.BusinessId })" aria-controls="members" role="tab">
                Mitglieder
            </a>
        </li>
        @if (Model.CurrentUsersMembershipInGroup != null) {
            <li role="presentation">
                <a href="@Url.Action("Account", new { userGroup = Model.CurrentUsersMembershipInGroup.UserGroup.BusinessId })" aria-controls="account" role="tab">
                    Konto
                </a>
            </li>
        }
        <li role="presentation">
            <a href="@Url.Action("Peanuts", new { userGroup = Model.UserGroupMembership.UserGroup.BusinessId })" aria-controls="peanuts" role="tab">
                Peanuts
            </a>
        </li>
        <li role="presentation">
            <a href="@Url.Action("Statistics", new { userGroup = Model.UserGroupMembership.UserGroup.BusinessId })" aria-controls="statistics" role="tab">
                Statistik
            </a>
        </li>
        @if (Model.UserGroupMembershipOptions.CanAdministrate) {
            <li role="presentation">
                <a href="@Url.Action("Administration", new { userGroup = Model.UserGroupMembership.UserGroup.BusinessId })" aria-controls="administration" role="tab">
                    Administration
                </a>
            </li>
        }
    </ul>
}


<div class="form form-horizontal">

    <div class="nav-tabs-content tab-content">
        <div class="nav-tabs-panel tab-pane active" role="tabpanel" id="details">
            <fieldset>
                <legend class="form__legend pull-left">
                    Nutzergruppe
                </legend>
                @Html.Form().Static(m => m.UserGroupMembership.UserGroup.Name)
                @Html.Form().Static(m => m.UserGroupMembership.UserGroup.CreatedAt)
                @Html.Form().Static(m => m.UserGroupMembership.UserGroup.AdditionalInformations)
                @Html.Form().Static(m => m.UserGroupMembership.UserGroup.BalanceOverdraftLimit)
            </fieldset>

            <fieldset>
                <legend class="form__legend pull-left">
                    Nutzer
                </legend>
                @Html.Form().Static(m => m.UserGroupMembership.User.DisplayName, "Name")
                @Html.Form().Static(m => m.UserGroupMembership.CreatedAt, "Mitglied seit")
                @Html.Form().Static(m => m.UserGroupMembership.MembershipType)
                @Html.Form().Static(m => m.UserGroupMembership.Account.Balance, formatString: "{0:C}")
            </fieldset>
            
            <fieldset>
                <legend class="form__legend pull-left">
                    Optionen für meine Mitgliedschaft
                </legend>
                @if (Model.UserGroupMembershipOptions.CanRefuseInvitation) {
                    <a class="btn btn-danger" href="@Url.Action("QuitMembershipForm", "UserGroup", new { userGroup = Model.UserGroupMembership.UserGroup.BusinessId, userGroupMembership = Model.UserGroupMembership.BusinessId })">
                        <span class="icon-thumbs-down"></span>
                        Einladung ablehnen
                    </a>
                }
                @if (Model.UserGroupMembershipOptions.CanAcceptInvitation) {
                    using (Html.BeginForm("AcceptMembershipInvitation", "UserGroup", new {
                        userGroup = Model.UserGroupMembership.UserGroup.BusinessId, userGroupMembership = Model.UserGroupMembership.BusinessId
                    }, FormMethod.Post, new {
                        @class = "form-inline", role = "form"
                    })) {
                        @Html.AntiForgeryToken()
                        @Html.HttpMethodOverride(HttpVerbs.Patch)
                        <button class="btn btn-success" type="submit">
                            <span class="icon-thumbs-up"></span>
                            Einladung annehmen
                        </button>
                    }
                }
                @if (Model.UserGroupMembershipOptions.CanRefuseRequest) {
                    <a class="btn btn-danger" href="@Url.Action("QuitMembershipForm", "UserGroup", new { userGroup = Model.UserGroupMembership.UserGroup.BusinessId, userGroupMembership = Model.UserGroupMembership.BusinessId })">
                        <span class="icon-thumbs-down"></span>
                        Anfrage ablehnen
                    </a>
                }
                @if (Model.UserGroupMembershipOptions.CanAcceptRequest) {
                    using (Html.BeginForm("AcceptMembershipRequest", "UserGroup", new {
                        userGroup = Model.UserGroupMembership.UserGroup.BusinessId, userGroupMembership = Model.UserGroupMembership.BusinessId
                    }, FormMethod.Post, new {
                        @class = "form-inline", role = "form"
                    })) {
                        @Html.AntiForgeryToken()
                        @Html.HttpMethodOverride(HttpVerbs.Patch)
                        <button class="btn btn-success" type="submit">
                            <span class="icon-thumbs-up"></span>
                            Anfrage annehmen
                        </button>
                    }
                }
                @if (Model.UserGroupMembership.IsActiveMembership) {
                    <a class="btn btn-danger" href="@Url.Action("QuitMembershipForm", "UserGroup", new { userGroup = Model.UserGroupMembership.UserGroup.BusinessId, userGroupMembership = Model.UserGroupMembership.BusinessId })">
                        <span class="icon-close"></span>
                        Mitgliedschaft beenden
                    </a>
                }
            </fieldset>
            
            <fieldset>
                <legend class="form__legend pull-left">
                    Einstellungen für meine Mitgliedschaft
                </legend>
                @using (Html.BeginForm("UpdateMembership", "UserGroup", new {userGroup = Model.CurrentUsersMembershipInGroup.UserGroup.BusinessId}, FormMethod.Post)) {
                    @Html.ValidationSummary(true)
                    @Html.AntiForgeryToken()
                    @Html.HttpMethodOverride(HttpVerbs.Put)

                    <div class="form__col">
                        @Html.Form().Checkbox(m => m.UserGroupMembershipUpdateCommand.UserGroupMembershipDto.AutoAcceptBills)
                    </div>
                    <div class="clearfix"></div>
                    <p></p>
                    <div>
                        <button type="submit" class="btn btn-primary">
                            <span class="icon icon-check"></span>
                            @Resources_Web.common_btn_Submit
                        </button>
                    </div>
                }
            </fieldset>
        </div>


    </div>
</div>