@using Com.QueoFlow.Peanuts.Net.Core.Domain.Accounting
@using Com.QueoFlow.Peanuts.Net.Core.Resources
@using Com.QueoFlow.Peanuts.Net.Web.Helper
@using Com.QueoFlow.Peanuts.Net.Web.Resources
@model Com.QueoFlow.Peanuts.Net.Web.Models.Bill.BillShowViewModel

@{
    ViewBag.Title = "Rechnung";
    ViewBag.Subtitle = Model.Bill.Subject + " vom " + Model.Bill.CreatedAt.ToShortDateString();
}

@section toolbar{

    <a href="@Url.Action("Index")" class="btn btn-default">
        <span class="icon icon-arrow-left">@Resources_Web.btn_Cancel</span>
    </a>

    @if (Model.BillOptions.CanSettle) {
        <a href="@Url.Action("SettleForm", new {bill = Model.Bill.BusinessId})" class="btn btn-warning pull-right">
            <span class="icon icon-check">Abrechnen</span>
        </a>
    }

    @if (Model.BillOptions.CanDelete) {
        <a href="@Url.Action("DeleteForm", new {bill = Model.Bill.BusinessId})" class="btn btn-danger pull-right">
            <span class="icon icon-remove">@Resources_Web.common_btn_Delete</span>
        </a>
    }
}

<div class="form form-horizontal">
    <fieldset>
        <legend class="form__legend">Allgemein</legend>
        <div class="form__row">
            <div class="form__col">
                @Html.Form().Static(m => m.Bill.Subject)
                @Html.Form().Static(m => m.Bill.Creditor.User.DisplayName, Resources_Domain.label_Com_QueoFlow_Peanuts_Net_Core_Domain_Accounting_Bill_Creditor)
                @Html.Form().Static(m => m.Bill.UserGroup.DisplayName, Resources_Domain.label_Com_QueoFlow_Peanuts_Net_Core_Domain_Accounting_Bill_UserGroup)
            </div>
            <div class="form__col">
                @Html.Form().Static(Resources_Domain.label_Com_QueoFlow_Peanuts_Net_Core_Domain_Accounting_Bill_Amount, Model.Bill.Amount.ToString("C"))
                @Html.Form().Static(m => m.Bill.CreatedAt, formatString: "{0:d}")
                @if (Model.Bill.IsSettled) {
                    @Html.Form().Static(m => m.Bill.SettlementDate, formatString: "{0:d}")
                }
            </div>
        </div>
    </fieldset>
    @if (Model.CreatedFromPeanut != null) {
        <fieldset>
            <legend class="form__legend pull-left">
                <span>
                    @Resources_Domain.label_Com_QueoFlow_Peanuts_Net_Core_Domain_Accounting_Bill_Peanut
                </span>
                <a href="@Url.Action("Show", "Peanut", new { peanut = Model.CreatedFromPeanut.BusinessId })" class="btn btn-link pull-right" title="Peanut anzeigen">
                    <span class="icon icon-external-link"></span>
                </a>
            </legend>
            <div class="form__row">
                <div class="form__col">
                    @Html.Form().Static(m => m.CreatedFromPeanut.Name)
                    @Html.Form().Static(m => m.CreatedFromPeanut.UserGroup.DisplayName)
                </div>
                <div class="form__col">
                    @Html.Form().Static(m => m.CreatedFromPeanut.Day, formatString: "{0:d}")
                    @Html.Form().Static(Resources_Domain.label_Com_QueoFlow_Peanuts_Net_Core_Domain_Peanuts_Peanut_Participations, Model.CreatedFromPeanut.Participations.Count)
                </div>
            </div>
        </fieldset>
    }
    <fieldset>
        <legend class="form__legend pull-left">
            <span>Schuldner</span>
            @if (Model.BillOptions.CanRefuse) {
                <a href="@Url.Action("RefuseBillForm", new {bill = Model.Bill.BusinessId})" class="btn btn-danger pull-right">
                    <span class="icon icon-thumbs-down">Ablehnen</span>
                </a>
            }
            @if (Model.BillOptions.CanAccept) {
                using (Html.BeginForm("AcceptBill", "Bill", new { bill = Model.Bill.BusinessId }, FormMethod.Post, new { @class = "form form-inline  pull-right", role = "form" })) {
                    @Html.AntiForgeryToken()
                    <button type="submit" title="Die Rechnung bezahlen." class="btn btn-success" formmethod="Post" formaction="@Url.Action("AcceptBill", "Bill", new { bill = Model.Bill.BusinessId })">
                        <span class="icon icon-thumbs-up">Akzeptieren</span>
                    </button>
                }
            }
        </legend>
        <table class="list">
            <tbody>
                @if (Model.Bill.UserGroupDebitors.Any()) {
                for (int debitorIndex = 0; debitorIndex < Model.Bill.UserGroupDebitors.Count; debitorIndex++) {
                        <tr>
                            <td>
                                @Model.Bill.UserGroupDebitors[debitorIndex].DisplayName
                            </td>
                            <td>
                                @switch (Model.Bill.UserGroupDebitors[debitorIndex].BillAcceptState) {
                                    case BillAcceptState.Accepted:
                                        <span class="label label-success">
                                            Akzeptiert
                                        </span>
                                        break;
                                    case BillAcceptState.Refused:
                                        <span class="label label-danger">
                                            Abgelehnt
                                        </span>
                                        break;
                                    default:
                                        <span class="label label-default">
                                            Warte ...
                                        </span>
                                        break;
                                }
                            </td>
                            <td>
                                @Model.Bill.GetPartialAmountByPortion(Model.Bill.UserGroupDebitors[debitorIndex].Portion).ToString("C")
                            </td>
                        </tr>
                    }
                }
                @if (Model.Bill.GuestDebitors.Any()) {
                for (int debitorIndex = 0; debitorIndex < Model.Bill.GuestDebitors.Count; debitorIndex++) {
                        <tr>
                            <td>
                                @Model.Bill.GuestDebitors[debitorIndex].DisplayName
                            </td>
                            <td>
                                <span class="label label-success">
                                    Akzeptiert
                                </span>
                            </td>
                            <td>
                                @Model.Bill.GetPartialAmountByPortion(Model.Bill.GuestDebitors[debitorIndex].Portion).ToString("C")
                            </td>
                        </tr>
                    }
                }
            </tbody>
        </table>
    </fieldset>
</div>